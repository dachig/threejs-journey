/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";

export default function Hamburger(props) {
  const { nodes, materials } = useGLTF("/hamburger-draco.glb");
  //   const model = useLoader(GLTFLoader, "/hamburger.glb", (loader) => {
  //     const dracoLoader = new DRACOLoader();
  //     dracoLoader.setDecoderPath("/draco/");
  //     loader.setDRACOLoader(dracoLoader);
  //   }); THIS IS THE LONG WAY FOR DRACO WITH DECODING, BUT useGLTF TAKES CARE OF THIS ANYWAY!!!
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.bottomBun.geometry}
        material={materials.BunMaterial}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.meat.geometry}
        material={materials.SteakMaterial}
        position={[0, 3.817, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.cheese.geometry}
        material={materials.CheeseMaterial}
        position={[0, 6.04, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.topBun.geometry}
        material={materials.BunMaterial}
        position={[0, 5.771, 0]}
      />
    </group>
  );
}

useGLTF.preload("/hamburger-draco.glb");
